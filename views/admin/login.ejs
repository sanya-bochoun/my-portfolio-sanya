<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Login - Portfolio</title>
    
    <!-- Favicon -->
    <link rel="icon" type="image/png" href="/assets/img/favicon.png">
    <link rel="shortcut icon" type="image/png" href="/assets/img/favicon-s.png">
    <link rel="apple-touch-icon" href="/assets/img/apple-touch-icon.png">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css" rel="stylesheet">
    <style>
        :root {
            --admin-primary: #149ddd;
            --admin-secondary: #050d18;
            --admin-accent: #0d7aa7;
        }
        
        body {
            background: linear-gradient(135deg, var(--admin-secondary) 0%, #1a252f 40%, var(--admin-primary) 100%);
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            font-family: "Roboto", system-ui, -apple-system, "Segoe UI", Roboto, sans-serif;
            position: relative;
            overflow: hidden;
        }
        
        body::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs><pattern id="grid" width="10" height="10" patternUnits="userSpaceOnUse"><path d="M 10 0 L 0 0 0 10" fill="none" stroke="rgba(255,255,255,0.03)" stroke-width="1"/></pattern></defs><rect width="100" height="100" fill="url(%23grid)"/></svg>');
            pointer-events: none;
        }
        .login-container {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(20px);
            border-radius: 20px;
            box-shadow: 0 20px 60px rgba(0,0,0,0.3), 0 0 0 1px rgba(255,255,255,0.1);
            padding: 3rem;
            width: 100%;
            max-width: 450px;
            position: relative;
            z-index: 1;
        }
        
        .form-disabled {
            opacity: 0.6;
            pointer-events: none;
        }
        
        .alert-danger {
            border-left: 4px solid #dc3545;
        }
        
        .alert-warning {
            border-left: 4px solid #ffc107;
        }
        
        .countdown-timer {
            font-family: 'Courier New', monospace;
            font-size: 1.1rem;
            color: #dc3545;
            font-weight: bold;
        }
        .login-header {
            text-align: center;
            margin-bottom: 2rem;
        }
        .login-header i {
            font-size: 3rem;
            color: var(--admin-primary);
            margin-bottom: 1rem;
            background: linear-gradient(45deg, var(--admin-primary), var(--admin-accent));
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }
        
        .form-control {
            border-radius: 12px;
            border: 2px solid #e9ecef;
            padding: 12px 16px;
            transition: all 0.3s ease;
        }
        
        .form-control:focus {
            border-color: var(--admin-primary);
            box-shadow: 0 0 0 0.2rem rgba(20, 157, 221, 0.25);
        }
        
        .btn-login {
            background: linear-gradient(135deg, var(--admin-primary) 0%, var(--admin-accent) 100%);
            border: none;
            padding: 12px;
            border-radius: 12px;
            transition: all 0.3s ease;
            font-weight: 600;
        }
        
        .btn-login:hover {
            background: linear-gradient(135deg, var(--admin-accent) 0%, var(--admin-primary) 100%);
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(20, 157, 221, 0.4);
        }
    </style>
</head>
<body>
    <div class="login-container">
        <div class="login-header">
            <i class="bi bi-shield-lock"></i>
            <h2>Admin Panel</h2>
            <p class="text-muted">Enter your PIN to continue</p>
        </div>

        <% if (typeof error !== 'undefined' && error) { %>
            <div class="alert alert-danger" role="alert">
                <i class="bi bi-exclamation-triangle"></i> <%= error %>
                <% if (typeof attempts !== 'undefined' && attempts >= 3) { %>
                    <div class="mt-2">
                        <small>
                            <i class="bi bi-shield-exclamation"></i> 
                            Security Warning: Multiple failed attempts detected
                        </small>
                    </div>
                <% } %>
                <% if (typeof lockout !== 'undefined' && lockout) { %>
                    <div class="mt-2">
                        <small>
                            <i class="bi bi-clock"></i> 
                            For security purposes, this IP address has been temporarily locked.
                        </small>
                    </div>
                <% } %>
            </div>
        <% } %>
        
        <% if (typeof attempts !== 'undefined' && attempts > 0 && (typeof lockout === 'undefined' || !lockout)) { %>
            <div class="alert alert-warning" role="alert">
                <i class="bi bi-exclamation-circle"></i> 
                Failed attempts: <%= attempts %>/<%= maxAttempts %>
                <% if (attempts >= 3) { %>
                    <br><small>Account will be locked after <%= maxAttempts %> failed attempts.</small>
                <% } %>
            </div>
        <% } %>

        <form action="/admin/login" method="POST" <% if (typeof lockout !== 'undefined' && lockout) { %>class="form-disabled"<% } %>>
            <div class="mb-3">
                <label for="pin" class="form-label">PIN Code</label>
                <input type="password" class="form-control form-control-lg" id="pin" name="pin" 
                       placeholder="Enter your PIN" required autocomplete="off" maxlength="10"
                       <% if (typeof lockout !== 'undefined' && lockout) { %>disabled<% } %>>
            </div>
            
            <button type="submit" class="btn btn-login text-white w-100 btn-lg"
                    <% if (typeof lockout !== 'undefined' && lockout) { %>disabled<% } %>>
                <% if (typeof lockout !== 'undefined' && lockout) { %>
                    <i class="bi bi-lock"></i> Account Locked
                <% } else { %>
                    <i class="bi bi-box-arrow-in-right"></i> Login
                <% } %>
            </button>
        </form>

        <div class="text-center mt-3">
            <a href="/" class="text-muted text-decoration-none">
                <i class="bi bi-arrow-left"></i> Back to Website
            </a>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Auto focus on PIN input (if not locked)
        <% if (typeof lockout === 'undefined' || !lockout) { %>
            document.getElementById('pin').focus();
        <% } %>
        
        // Allow only numbers
        document.getElementById('pin').addEventListener('input', function(e) {
            this.value = this.value.replace(/[^0-9]/g, '');
            
            // Security: Limit input length
            if (this.value.length > 10) {
                this.value = this.value.substring(0, 10);
            }
        });
        
        // Add form validation
        document.querySelector('form').addEventListener('submit', function(e) {
            const pin = document.getElementById('pin').value.trim();
            
            // Basic validation
            if (!pin || pin.length < 3) {
                e.preventDefault();
                alert('PIN must be at least 3 digits');
                return false;
            }
            
            // Check for obvious patterns (security)
            if (/^(\d)\1{2,}$/.test(pin) && pin.length <= 4) {
                e.preventDefault();
                alert('Please enter a valid PIN');
                return false;
            }
        });
        
        <% if (typeof lockout !== 'undefined' && lockout && typeof remainingTime !== 'undefined') { %>
        // Countdown timer for lockout
        let remainingSeconds = <%= remainingTime %> * 60;
        
        // Create countdown display
        const countdownDiv = document.createElement('div');
        countdownDiv.className = 'countdown-timer text-center mt-3';
        countdownDiv.innerHTML = '<i class="bi bi-stopwatch"></i> Time remaining: <span id="countdown">00:00</span>';
        
        // Insert after the form
        const form = document.querySelector('form');
        form.parentNode.insertBefore(countdownDiv, form.nextSibling);
        
        const updateCountdown = () => {
            const minutes = Math.floor(remainingSeconds / 60);
            const seconds = remainingSeconds % 60;
            const display = `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;
            document.getElementById('countdown').textContent = display;
            
            if (remainingSeconds <= 0) {
                // Reload page when lockout expires
                window.location.reload();
            } else {
                remainingSeconds--;
            }
        };
        
        // Update immediately and then every second
        updateCountdown();
        setInterval(updateCountdown, 1000);
        <% } %>
        
        // Security: Prevent multiple rapid submissions
        let submitCount = 0;
        let lastSubmit = 0;
        
        document.querySelector('form').addEventListener('submit', function(e) {
            const now = Date.now();
            
            // Rate limiting: max 1 submission per 2 seconds
            if (now - lastSubmit < 2000) {
                e.preventDefault();
                console.log('Rate limited: submission too fast');
                return false;
            }
            
            submitCount++;
            lastSubmit = now;
            
            // Disable submit button temporarily
            const submitBtn = this.querySelector('button[type="submit"]');
            submitBtn.disabled = true;
            setTimeout(() => {
                submitBtn.disabled = false;
            }, 2000);
        });
        
        // Security: Clear form on page unload
        window.addEventListener('beforeunload', function() {
            document.getElementById('pin').value = '';
        });
    </script>
</body>
</html>
